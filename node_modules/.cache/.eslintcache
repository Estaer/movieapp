[{"/Users/essa/WebstormProjects/movieapp/src/index.js":"1","/Users/essa/WebstormProjects/movieapp/src/app.js":"2","/Users/essa/WebstormProjects/movieapp/src/components/sidenavbar/index.js":"3","/Users/essa/WebstormProjects/movieapp/src/pages/discover/index.js":"4","/Users/essa/WebstormProjects/movieapp/src/colors.js":"5","/Users/essa/WebstormProjects/movieapp/src/fetcher.js":"6","/Users/essa/WebstormProjects/movieapp/src/components/searchfilter/index.js":"7","/Users/essa/WebstormProjects/movieapp/src/components/movielist/index.js":"8","/Users/essa/WebstormProjects/movieapp/src/components/accordionfilter/index.js":"9","/Users/essa/WebstormProjects/movieapp/src/components/searchbar/index.js":"10","/Users/essa/WebstormProjects/movieapp/src/components/movieitem/index.js":"11","/Users/essa/WebstormProjects/movieapp/src/constants.js":"12"},{"size":153,"mtime":1580306422000,"results":"13","hashOfConfig":"14"},{"size":808,"mtime":1639563174000,"results":"15","hashOfConfig":"14"},{"size":2646,"mtime":1645080500000,"results":"16","hashOfConfig":"14"},{"size":2464,"mtime":1648047724878,"results":"17","hashOfConfig":"14"},{"size":199,"mtime":1614665762000,"results":"18","hashOfConfig":"14"},{"size":739,"mtime":1648047354480,"results":"19","hashOfConfig":"14"},{"size":1611,"mtime":1645079608000,"results":"20","hashOfConfig":"14"},{"size":384,"mtime":1645079516000,"results":"21","hashOfConfig":"14"},{"size":118,"mtime":1645079438000,"results":"22","hashOfConfig":"14"},{"size":928,"mtime":1639572684000,"results":"23","hashOfConfig":"14"},{"size":2246,"mtime":1648048707763,"results":"24","hashOfConfig":"14"},{"size":88,"mtime":1648048647949,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1avarfn",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/essa/WebstormProjects/movieapp/src/index.js",[],["56","57"],"/Users/essa/WebstormProjects/movieapp/src/app.js",[],"/Users/essa/WebstormProjects/movieapp/src/components/sidenavbar/index.js",["58"],"import React, { useState } from \"react\";\r\nimport styled, { css } from 'styled-components';\r\nimport { NavLink as Link } from \"react-router-dom\";\r\n\r\nimport * as colors from \"../../colors\";\r\nimport Arrow from \"../../images/arrow-icon.png\";\r\nimport SearchWhite from \"../../images/search-icon-white.png\";\r\n\r\nexport default function SideNavBar () {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  /* TODO: Write the necessary functions to open and close the sidebar */\r\n\r\n  return (\r\n    <SideNavBarCont className={isOpen ? 'visible' : ''}>\r\n      {/* TODO: Implement a hamburger icon that controls the open state of the sidebar. This control should only be visible on mobile devices via CSS media queries */}\r\n      {/* The sidebar should slide in from left */}\r\n      <SideNavHeader>\r\n        Wesley\r\n        <img src={Arrow} alt=\"Arrow pointing down\" />\r\n      </SideNavHeader>\r\n      <SideNavMainLink to=\"/discover\" exact>\r\n        Discover\r\n        <img src={SearchWhite} alt=\"Magnifying glass\" />\r\n      </SideNavMainLink>\r\n      <SideNavSectionTitle><HeaderText>Watched</HeaderText></SideNavSectionTitle>\r\n      <NavLink to=\"/watched/movies\">Movies</NavLink>\r\n      <NavLink to=\"/watched/tv-shows\">Tv Shows</NavLink>\r\n      <SideNavSectionTitle><HeaderText>Saved</HeaderText></SideNavSectionTitle>\r\n      <NavLink to=\"/saved/movies\">Movies</NavLink>\r\n      <NavLink to=\"/saved/tv-shows\">Tv Shows</NavLink>\r\n    </SideNavBarCont>\r\n  );\r\n}\r\n\r\nconst SideNavBarCont = styled.div`\r\n  position: fixed;\r\n  z-index: 9;\r\n  width: 280px;\r\n  height: 100%;\r\n  background-color: ${colors.sideNavBar};\r\n  color: white;\r\n`\r\n\r\nconst SectionsStyles = css`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 25px 35px;\r\n  font-size: 1.6em;\r\n  font-weight: 700;\r\n  color: white;\r\n`;\r\n\r\nconst SideNavMainLink = styled(Link)`\r\n  ${SectionsStyles}\r\n\r\n  &:hover, &:focus-visible {\r\n    background: ${colors.sideNavBarHover};\r\n  }\r\n\r\n  &.active {\r\n    background: ${colors.primaryColor};\r\n  }\r\n`;\r\n\r\nconst SideNavHeader = styled.div`\r\n  ${SectionsStyles}\r\n`;\r\n\r\nconst SideNavSectionTitle = styled.div`\r\n  font-size: 1.6em;\r\n  font-weight: 700;\r\n  padding: 25px 0 15px 35px;\r\n`\r\n\r\nconst HeaderText = styled.div`\r\n  padding: 0 35px 10px 0;\r\n  border-bottom: 1px solid ${colors.lightBackground};\r\n`\r\n\r\nconst NavLink = styled(Link)`\r\n  display: block;\r\n  color: white;\r\n  opacity: .8;\r\n  font-size: 1.2em;\r\n  padding: 10px 35px;\r\n\r\n  &:hover, &:focus-visible {\r\n    opacity: 1;\r\n    background: ${colors.sideNavBarHover};\r\n  }\r\n\r\n  &.active { \r\n    background: ${colors.primaryColor};\r\n    opacity: 1;\r\n  }\r\n`","/Users/essa/WebstormProjects/movieapp/src/pages/discover/index.js",["59","60","61","62","63","64","65","66","67"],"import React, { useState, useEffect } from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nimport * as colors from \"../../colors\";\r\n\r\nimport { getPopularMovies } from \"../../fetcher\";\r\n\r\nimport SearchFilters from \"../../components/searchfilter\";\r\nimport MovieList from \"../../components/movielist\";\r\n\r\nconst ratings = [\r\n    { id: 7.5, name: 7.5 },\r\n    { id: 8, name: 8 },\r\n    { id: 8.5, name: 8.5 },\r\n    { id: 9, name: 9 },\r\n    { id: 9.5, name: 9.5 },\r\n    { id: 10, name: 10 }]\r\n\r\nconst languages =  [\r\n    { id: 'GR', name: 'Greek' },\r\n    { id: 'EN', name: 'English' },\r\n    { id: 'RU', name: 'Russian' },\r\n    { id: 'PO', name: 'Polish' }\r\n]\r\n\r\nconst Discover = () => {\r\n  const [keyword, setKeyword] = useState('');\r\n  const [year, setYear] = useState(0);\r\n  const [results, setResults] = useState([]);\r\n  const [totalCount, setTotalCount] = useState(0);\r\n  const [genreOptions, setGenreOptions] = useState([]);\r\n  const [ratingOptions, setRatingOptions] = useState(ratings);\r\n  const [languageOptions, setLanguageOptions] = useState(languages);\r\n\r\n  useEffect(() => {\r\n    const initialFetch = async () => {\r\n      const results = await getPopularMovies()\r\n      setResults(results)\r\n    }\r\n    initialFetch()\r\n  }, [])\r\n\r\n  // TODO: Preload and set the popular movies and movie genres when page loads\r\n\r\n  // TODO: Update search results based on the keyword and year inputs\r\n\r\n\r\n  return (\r\n    <DiscoverWrapper>\r\n      <MobilePageTitle>Discover</MobilePageTitle> {/* MobilePageTitle should become visible on mobile devices via CSS media queries*/}\r\n      <TotalCount>{totalCount} results</TotalCount>\r\n      <MovieFilters>\r\n        <SearchFilters\r\n          genres={genreOptions}\r\n          ratings={ratingOptions}\r\n          languages={languageOptions}\r\n          searchMovies={(keyword, year) => this.searchMovies(keyword, year)}\r\n        />\r\n      </MovieFilters>\r\n      <MovieResults>\r\n        <MovieList\r\n          movies={results || []}\r\n          genres={genreOptions || []}\r\n        />\r\n      </MovieResults>\r\n    </DiscoverWrapper>\r\n  )\r\n}\r\n\r\nexport default Discover;\r\n\r\nconst DiscoverWrapper = styled.main`\r\n  padding: 35px;\r\n`\r\n\r\nconst MovieResults = styled.div`\r\n  display: inline-block;\r\n  width: calc(100% - 295px);\r\n`\r\n\r\nconst MovieFilters = styled.div`\r\n  width: 280px;\r\n  float: right;\r\n  margin-top: 15px;\r\n`\r\n\r\nconst MobilePageTitle = styled.h1`\r\n  display: none;\r\n`\r\n\r\nconst TotalCount = styled.strong`\r\n  display: block;\r\n`\r\n","/Users/essa/WebstormProjects/movieapp/src/colors.js",[],"/Users/essa/WebstormProjects/movieapp/src/fetcher.js",["68"],"import axios from 'axios';\r\n\r\n// TODO: All of your API requests should be in this file\r\n// See the README file for more information about the APIs you would need to use\r\nconst API_KEY = \"f66ac82dbc85da661bf50fa05de8a434\"\r\nconst BASE_URL= \"https://api.themoviedb.org/3/\"\r\nconst IMAGE_BASE_URL= \"https://image.tmdb.org/t/p/w500/\";\r\n\r\nconst getPopularMovies = async () =>{\r\n    return await axios.get(`${BASE_URL}movie/popular?api_key=${API_KEY}`)\r\n        .then((response) => {\r\n            console.log(response.data.results, 'reshgfdssdf')\r\n            return response.data.results\r\n        })\r\n        .catch(error => {\r\n            console.error(`Error: ${error}`)\r\n            return []\r\n        });\r\n};\r\n\r\nexport { getPopularMovies };\r\n","/Users/essa/WebstormProjects/movieapp/src/components/searchfilter/index.js",["69","70"],"import React from \"react\";\r\nimport styled, { css } from 'styled-components';\r\n\r\nimport * as colors from \"../../colors\";\r\nimport ExpandableFilter from \"../accordionfilter\";\r\nimport SearchBar from \"../../components/searchbar\";\r\n\r\nimport SearchIcon from \"../../images/search-icon-yellow.png\";\r\nimport YearIcon from \"../../images/year-icon.png\";\r\n\r\nexport default function SearchFilters({ genres, ratings, languages, onSearch }) {\r\n  return (\r\n    <FiltersWrapper>\r\n      <SearchFiltersCont className=\"search_inputs_cont\" marginBottom>\r\n        <SearchBar\r\n          id=\"keyword_search_input\" \r\n          type=\"text\"\r\n          icon={{ src: SearchIcon, alt: 'Magnifying glass' }} \r\n          placeholder=\"Search for movies\"\r\n        />\r\n        <SearchBar\r\n          id=\"year_search_input\" \r\n          type=\"number\"\r\n          icon={{ src: YearIcon, alt: 'Calendar icon' }} \r\n          placeholder=\"Year of release\"\r\n        />\r\n      </SearchFiltersCont>\r\n      <SearchFiltersCont>\r\n        <CategoryTitle>Movies</CategoryTitle>\r\n        {/* TODO: Complete the \"AccordionFilter\" component and re-use it for all filter categories */}\r\n      </SearchFiltersCont>\r\n    </FiltersWrapper>\r\n  );\r\n}\r\n\r\nconst FiltersWrapper = styled.div`\r\n  position: relative;\r\n`\r\n\r\nconst SearchFiltersCont = styled.div`\r\n  background-color: white;\r\n  padding: 20px;\r\n  border-radius: 5px;\r\n  transition: all .3s ease-in-out;\r\n\r\n  .search_bar_wrapper:first-child {\r\n    margin-bottom: 15px;\r\n  }\r\n  \r\n  ${props => props.marginBottom && css`\r\n    margin-bottom: 15px;\r\n  `}\r\n`\r\n\r\nconst CategoryTitle = styled.h3`\r\n  margin: 0 0 15px 0;\r\n`","/Users/essa/WebstormProjects/movieapp/src/components/movielist/index.js",[],"/Users/essa/WebstormProjects/movieapp/src/components/accordionfilter/index.js",["71","72"],"import React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nexport default function AccordionFilter () {\r\n}","/Users/essa/WebstormProjects/movieapp/src/components/searchbar/index.js",[],"/Users/essa/WebstormProjects/movieapp/src/components/movieitem/index.js",["73"],"/Users/essa/WebstormProjects/movieapp/src/constants.js",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":10,"column":18,"nodeType":"80","messageId":"81","endLine":10,"endColumn":27},{"ruleId":"78","severity":1,"message":"82","line":4,"column":13,"nodeType":"80","messageId":"81","endLine":4,"endColumn":19},{"ruleId":"78","severity":1,"message":"83","line":27,"column":10,"nodeType":"80","messageId":"81","endLine":27,"endColumn":17},{"ruleId":"78","severity":1,"message":"84","line":27,"column":19,"nodeType":"80","messageId":"81","endLine":27,"endColumn":29},{"ruleId":"78","severity":1,"message":"85","line":28,"column":10,"nodeType":"80","messageId":"81","endLine":28,"endColumn":14},{"ruleId":"78","severity":1,"message":"86","line":28,"column":16,"nodeType":"80","messageId":"81","endLine":28,"endColumn":23},{"ruleId":"78","severity":1,"message":"87","line":30,"column":22,"nodeType":"80","messageId":"81","endLine":30,"endColumn":35},{"ruleId":"78","severity":1,"message":"88","line":31,"column":24,"nodeType":"80","messageId":"81","endLine":31,"endColumn":39},{"ruleId":"78","severity":1,"message":"89","line":32,"column":25,"nodeType":"80","messageId":"81","endLine":32,"endColumn":41},{"ruleId":"78","severity":1,"message":"90","line":33,"column":27,"nodeType":"80","messageId":"81","endLine":33,"endColumn":45},{"ruleId":"78","severity":1,"message":"91","line":7,"column":7,"nodeType":"80","messageId":"81","endLine":7,"endColumn":21},{"ruleId":"78","severity":1,"message":"82","line":4,"column":13,"nodeType":"80","messageId":"81","endLine":4,"endColumn":19},{"ruleId":"78","severity":1,"message":"92","line":5,"column":8,"nodeType":"80","messageId":"81","endLine":5,"endColumn":24},{"ruleId":"78","severity":1,"message":"93","line":1,"column":8,"nodeType":"80","messageId":"81","endLine":1,"endColumn":13},{"ruleId":"78","severity":1,"message":"94","line":2,"column":8,"nodeType":"80","messageId":"81","endLine":2,"endColumn":14},{"ruleId":"95","severity":1,"message":"96","line":12,"column":13,"nodeType":"97","endLine":12,"endColumn":65},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'setIsOpen' is assigned a value but never used.","Identifier","unusedVar","'colors' is defined but never used.","'keyword' is assigned a value but never used.","'setKeyword' is assigned a value but never used.","'year' is assigned a value but never used.","'setYear' is assigned a value but never used.","'setTotalCount' is assigned a value but never used.","'setGenreOptions' is assigned a value but never used.","'setRatingOptions' is assigned a value but never used.","'setLanguageOptions' is assigned a value but never used.","'IMAGE_BASE_URL' is assigned a value but never used.","'ExpandableFilter' is defined but never used.","'React' is defined but never used.","'styled' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]